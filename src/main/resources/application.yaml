server:
  port: ${SPRING_SERVER_PORT:7083}
  servlet:
    context-path: /dicegame-service
    application-display-name: ${spring.application.name}
spring:
  application:
    name: dicegame-service
  datasource:
    url: jdbc:postgresql://${SPRING_POSTGRES_HOST:localhost}:${SPRING_POSTGRES_PORT:5432}/${SPRING_POSTGRES_DB:dicegame}
    username: ${SPRING_POSTGRES_USER:postgres}
    password: ${SPRING_POSTGRES_PASSWORD:1234}
    hikari:
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 30000
      pool-name: HikariPool-dicegame
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  flyway:
    enabled: true
    url: jdbc:postgresql://${SPRING_POSTGRES_HOST:localhost}:${SPRING_POSTGRES_PORT:5432}/${SPRING_POSTGRES_DB:dicegame}
    user: ${SPRING_POSTGRES_USER:postgres}
    password: ${SPRING_POSTGRES_PASSWORD:1234}
    baseline-on-migrate: true
    locations: classpath:db/migration
    repair-on-migrate: true
    out-of-order: true
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    password: ${SPRING_REDIS_PASSWORD:}
    connect-timeout: 2s
  zipkin:
    base-url: ${SPRING_ZIPKIN_BASE_URL:http://localhost:9411}
  sleuth:
    sampler:
      probability: 1.0

openapi:
  service:
    title: Dice Game API #title that you will want to display in the swagger ui
    version: 1.0.0
    url: ${API_GATE_WAY_URL:http://localhost:7082/dicegame-service} #api gateway url
#    url: http://localhost:7082/dicegame-service #api gateway url
springdoc:
  api-docs:
    path: /v3/api-docs #these urls will used to load the swagger ui of this service by the api gateway
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    root: INFO
    com.example.dicegame: DEBUG
    org.hibernate.SQL: INFO
    org.springframework.jdbc.core.JdbcTemplate: INFO

app:
  target-score: 25 # default
  prize-score: 100 # default

kafka:
  topics:
    game-topic: game-topic

feign:
  client:
    roll-dice:
      url: http://developer-test.hishab.io/api/v1/roll-dice

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://localhost:7081/eureka}
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true

management:
  endpoints:
    health:
      enabled: true
    web:
      exposure:
        include: info, health, metrics